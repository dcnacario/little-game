/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ./public/models/dog/Dog.gltf 
*/

import React, { useEffect, useRef, useState } from "react";
import { useGLTF, useAnimations, useKeyboardControls } from "@react-three/drei";
import { RigidBody } from "@react-three/rapier";
import SpeechBubble from "./SpeechBubble";
import { useNavigate } from "react-router-dom";
import { Controls } from "../App";
import NavigationTrigger from "./NavigationTrigger";

export function Dog(props) {
  const navigate = useNavigate();
  const ePressed = useKeyboardControls((state) => state[Controls.use]);
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/models/dog/Dog.gltf");
  const { actions } = useAnimations(animations, group);
  const [isVisible, setIsVisible] = useState(false);
  const handleNavigate = () => {
    navigate("happy-birthday"); // Navigate to the target route
  };
  useEffect(() => {
    actions["Idle"].reset().fadeIn(0.2).play();
  }, []);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="AnimalArmature">
          <primitive object={nodes.All} />
          <primitive object={nodes.Root} />
          <RigidBody
            type="fixed"
            onCollisionEnter={() => {
              setIsVisible(true);
            }}
            onCollisionExit={() => setIsVisible(false)}
          >
            <SpeechBubble
              scale={[1, 1, 1]}
              isVisible={isVisible}
              position={[1, 4, 2]}
            />
            <skinnedMesh
              castShadow
              name="Dog"
              geometry={nodes.Dog.geometry}
              material={materials.Atlas}
              skeleton={nodes.Dog.skeleton}
            />
          </RigidBody>
          <NavigationTrigger
            isVisible={isVisible}
            onNavigate={handleNavigate}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/dog/Dog.gltf");
